{"version":3,"sources":["redux/reducers/rootReducer.js","redux/store/reduxDevTools.js","redux/actions/action.js","assets/data.js","components/ScrollToEnd.js","components/Introduce.js","components/StyleSheet.js","components/Resume.js","serviceWorker.js","index.js"],"names":["combineReducers","currentIntroduce","state","action","type","payLoad","currentStyle","isMD","isStyleEditable","store","createStore","rootReducer","setMarkdown","setStyle","showContent","setIntroduce","setStyleEditable","introduce","styles","ScrollToEnd","WrappedComponent","componentDidUpdate","dom","ReactDOM","findDOMNode","scrollHeight","clientHeight","scrollTop","this","props","Component","className","dangerouslySetInnerHTML","__html","marked","shouldComponentUpdate","nextProps","_this","oninput","contentEditable","addEventListener","event","editStyle","target","innerText","suppressContentEditableWarning","Resume","interval","componentDidMount","start","showIntroduce","Promise","resolve","reject","show","length","substring","setTimeout","showStyles","style","next","console","error","connect","dispatch","bindActionCreators","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09901f75.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst currentIntroduce = (state=\"\", action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"SET_INTRODUCE\":\r\n\t\t\treturn action.payLoad;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst currentStyle = (state=\"\", action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"SET_STYLE\":\r\n\t\t\treturn action.payLoad;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst isMD = (state=false, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"SET_MARKDOWN\":\r\n\t\t\treturn action.payLoad;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst isStyleEditable = (state=false, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"SET_STYlEEDITABLE\":\r\n\t\t\treturn action.payLoad;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default combineReducers({\r\n  currentIntroduce,\r\n  currentStyle,\r\n  isMD,\r\n  isStyleEditable\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nlet store = process.env.NODE_ENV === 'production' ? (\r\n  createStore(rootReducer)\r\n) : (\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ ? (\r\n      createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  ) : (\r\n      createStore(rootReducer)\r\n  )\r\n)\r\n\r\nexport default store;","export const setMarkdown = (isMD) => {\r\n\treturn {\r\n\t\ttype: \"SET_MARKDOWN\",\r\n\t\tpayLoad: isMD\r\n\t}\r\n}\r\n\r\nexport const setStyle = (showContent) => {\r\n\treturn {\r\n\t\ttype: \"SET_STYLE\",\r\n\t\tpayLoad: showContent\r\n\t}\r\n}\r\n\r\nexport const setIntroduce = (showContent) => {\r\n\treturn {\r\n\t\ttype: \"SET_INTRODUCE\",\r\n\t\tpayLoad: showContent\r\n\t}\r\n}\r\n\r\nexport const setStyleEditable = (isStyleEditable) => {\r\n  return {\r\n    type: \"SET_STYlEEDITABLE\",\r\n    payLoad: isStyleEditable\r\n  }\r\n}","const introduce = `\r\n# 罗威\r\n\r\n\r\n## 工作经验： 三年\r\n\r\n## 项目经历\r\n\r\n### 中国银行香港分行系统： 软件开发工程师（cobol，cics，db2）\r\n* 基于ZOS大型机，主要负责模块MTC（结构性存款），CIR（中央利率系统）\r\n\r\n### 天威工单系统： 前端开发工程师（react全家桶，ant-design）\r\n* 基于react全家桶，ant-design的后台工单管理系统\r\n\r\n### 天威工单系统（手机版）： 前端开发工程师（react全家桶，ant-design-mobile）\r\n* 基于webview，react全家桶，ant-design的移动端工单处理系统\r\n\r\n### 车镇物流系统： 前端开发工程师（react全家桶，ant-design-pro）\r\n* 基于react全家桶，ant-design-pro的物流管理系统\r\n\r\n### 车镇新版金融平台： 前端开发工程师（react全家桶，ant-design-pro）\r\n* 基于老版金融平台用react全家桶，ant-design-pro的重构\r\n\r\n## 教育经历\r\n\r\n**江汉大学 - 计算机科学与技术**        本科\r\n\r\n## 联系方式\r\n\r\n**blog：**  https://luowei95327.github.io/\r\n**github：** https://github.com/luowei95327`;\r\n\r\nconst styles = [\r\n`/*\r\n* \r\n* Hello, 我是罗威\r\n*\r\n* 最近看到了别人做了一个动态的简历（http://strml.net/），感觉很有意思，所以我也用 React和Redux 做了一份简易的动态简历\r\n* 希望大家能够喜欢 :)\r\n*/\r\n\r\n/* 首先给所有元素加上过渡效果 */\r\n* {\r\n  -webkit-transition: all .3s;\r\n  transition: all .3s;\r\n}\r\n/* 白色背景太单调了，我们来点背景 */\r\nhtml {\r\n  color: rgb(222,222,222); background: #425261; \r\n}\r\n/* 文字直接显示在页面上，没有任何装饰，真的太单调了！我们来给文字加点装饰吧~~ */\r\n.styleEdit {\r\n  background-color: #303030;\r\n  padding: .5em;\r\n  margin: 1vh 1vw;\r\n  border: 1px solid;\r\n  overflow: auto;\r\n  width: calc(46vw - 2px); \r\n  height: calc(95vh - 2px);\r\n}\r\n/* 作为一个程序员，我们不可以太沉闷哦~~，给自己的代码加一点色彩吧 */\r\n.token.comment{ color: #857F6B; font-style: italic; }\r\n.token.selector{ color: #E86E75; }\r\n.token.property{ color: #F78C6C; }\r\n.token.punctuation{ color: #88DCFE; }\r\n.token.function{ color: #82AAFF; }\r\n\r\n/* 加一点 3D 效果，更加地酷炫 */\r\nhtml{\r\n  -webkit-perspective: 1000px;\r\n          perspective: 1000px;\r\n}\r\n.styleEdit {\r\n  position: fixed; left: 0; top: 0; \r\n  -webkit-transition: none; \r\n  transition: none;\r\n  -webkit-transform: rotateY(8deg) translateZ(-100px) ;\r\n          transform: rotateY(8deg) translateZ(-100px) ;\r\n}\r\n/* 不知道以上对代码框的修改你是否喜欢呢？ */\r\n/* 如果不喜欢，在最后你可以自己修改成自己喜欢的样式哦！*/\r\n\r\n/* 接下来我给自己准备一个编辑器，用来存放我的简历内容 */\r\n.introduceEdit{\r\n  position: fixed; right: 0; top: 0;\r\n  padding: .5em;  \r\n  margin: 1vh 1vw;\r\n  width: calc(46vw - 2px); \r\n  height: calc(95vh - 2px); \r\n  border: 1px solid;\r\n  color: #222;\r\n  background: white;\r\n  overflow: auto;\r\n}\r\n\r\n/* 好了，我要开始开始写简历了 */\r\n`,\r\n`\r\n/* 这个简历好像差点什么\r\n * 对了，这是 Markdown 格式的，让我们转换成好看的格式吧！\r\n * 简单，用开源工具 marked 翻译成 HTML 就行了\r\n *           3          \r\n *           2          \r\n *           1          \r\n *           0.99\r\n *           0.98\r\n *           ...\r\n *           骗你的啦，已经好了！\r\n */\r\n`,\r\n`\r\n/* 我们来让页面的样式更丰富一些！ */\r\n\r\n.introduceEdit{\r\n  -webkit-transition: none; \r\n  transition: none;\r\n  -webkit-transform: rotateY(-8deg) translateZ(-100px) ;\r\n          transform: rotateY(-8deg) translateZ(-100px) ;\r\n}\r\n.introduceEdit h1{\r\n  display: block;\r\n  width: 80px;\r\n  margin: 0 auto;\r\n}\r\n.introduceEdit h2{\r\n  display: inline-block;\r\n  border-bottom: 1px solid;\r\n  margin: 1em 0 .5em;\r\n}\r\n.introduceEdit h3{\r\n\tdisplay: inline-block;\r\n\tmargin: .5em 0;\r\n}\r\n.introduceEdit ul{\r\n  margin: 0;\r\n}\r\n.introduceEdit a{\r\n\tcolor: #000;\r\n}\r\n.introduceEdit ul{\r\n\tlist-style: none;\r\n}\r\n.introduceEdit ul>li::before {\r\n\tcontent: \"•\";\r\n\tmargin-left: 1em;\r\n\tmargin-right: .5em;\r\n}\r\n\r\n\r\n/*\r\n* 好了！简历到这里就基本写完了。\r\n*\r\n* 样式也只是简单的写了一些。\r\n*\r\n* 不过你可以自己修改左边的样式试试效果！（换行的时候要用 shift + enter ）\r\n* \r\n* 如果你也想制作一份这样的动态建立可以 Fork (https://github.com/luowei95327/react-resume)，打造你自己的简历！\r\n*/\r\n\r\n\r\n/*\r\n* 下面自己尝试改改样式吧！！！\r\n*/\r\n`\r\n]\r\n\r\nexport {introduce, styles};","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst ScrollToEnd = (WrappedComponent) => {\r\n  return class ScrollToEnd extends Component {\r\n\r\n    componentDidUpdate = () => {\r\n      let dom = ReactDOM.findDOMNode(this);\r\n      if(dom.scrollHeight > dom.clientHeight) {\r\n        dom.scrollTop = dom.scrollHeight\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollToEnd;","import React from 'react';\r\nimport ScrollToEnd from './ScrollToEnd';\r\nimport marked from 'marked';\r\n\r\nconst Introduce = (props) => {\r\n  const { currentIntroduce, isMD } = props;\r\n  return (\r\n    <div className='introduceEdit'>\r\n      <pre>\r\n        <code dangerouslySetInnerHTML={{__html: isMD ? marked(currentIntroduce) : currentIntroduce}}></code>\r\n      </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScrollToEnd(Introduce);","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ScrollToEnd from './ScrollToEnd';\r\nimport 'prismjs';\r\nimport 'prismjs/themes/prism.css'\r\nimport { PrismCode } from 'react-prism';\r\n\r\nclass StyleSheet extends Component {\r\n\r\n  shouldComponentUpdate = (nextProps) => {\r\n    return !this.props.isStyleEditable\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    let _this = this;\r\n    let dom = ReactDOM.findDOMNode(this);\r\n    if(!dom.oninput && dom.contentEditable) {\r\n      dom.addEventListener('input', (event) => {\r\n        _this.props.editStyle(event.target.innerText);\r\n      }, false)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentStyle, isStyleEditable } = this.props;\r\n    return (\r\n      <div className=\"styleEdit\" suppressContentEditableWarning contentEditable={isStyleEditable}>\r\n        <pre>\r\n          <PrismCode className=\"language-css\">{currentStyle}</PrismCode>\r\n        </pre>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollToEnd(StyleSheet);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { setMarkdown, setStyle, setIntroduce, setStyleEditable } from '../redux/actions/action';\r\nimport { introduce, styles } from '../assets/data';\r\nimport Introduce from './Introduce';\r\nimport StyleSheet from './StyleSheet';\r\n\r\nclass Resume extends Component {\r\n  state = {\r\n    interval: 40,\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // this.props.setIntroduce(introduce);\r\n    // this.props.setStyle(styles.join());\r\n    // this.props.setMarkdown(true);\r\n    // this.props.setStyleEditable(true);\r\n    this.start();\r\n  }\r\n\r\n  showIntroduce = () => {\r\n    return new Promise((resolve, reject) => {\r\n      let show = () => {\r\n        const { currentIntroduce } = this.props;\r\n        if(currentIntroduce.length < introduce.length) {\r\n          this.props.setIntroduce(introduce.substring(0, currentIntroduce.length+1));\r\n          setTimeout(show, this.state.interval);\r\n        } else {\r\n          resolve();\r\n        }\r\n      }\r\n      show();\r\n    })\r\n  }\r\n\r\n  showStyles = (style, next) => {\r\n    const { currentStyle } = this.props;\r\n    if(next) {\r\n      style = currentStyle + style\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let show = () => {\r\n        const { currentStyle } = this.props;\r\n        if(!style) return ;\r\n        if(currentStyle.length < style.length) {\r\n          this.props.setStyle(style.substring(0, currentStyle.length+1));\r\n          setTimeout(show, this.state.interval);\r\n        } else {\r\n          resolve();\r\n        }\r\n      }\r\n      show();\r\n    })\r\n  }\r\n\r\n  async start() {\r\n    try {\r\n      await(this.showStyles(styles[0]));\r\n      await(this.showIntroduce());\r\n      await(this.showStyles(styles[1], true));\r\n      this.props.setMarkdown(true);\r\n      await(this.showStyles(styles[2], true));\r\n      this.props.setStyleEditable(true);\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  editStyle = (style) => {\r\n    this.props.setStyle(style);\r\n  }\r\n\r\n  render() {\r\n    const { currentStyle, currentIntroduce, isMD, isStyleEditable } = this.props;\r\n    return(\r\n      <Fragment>\r\n        <StyleSheet \r\n          currentStyle={currentStyle} \r\n          isStyleEditable={isStyleEditable}\r\n          editStyle={this.editStyle}\r\n        />\r\n        <Introduce currentIntroduce={currentIntroduce} isMD={isMD}/>\r\n        <style>{currentStyle}</style>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({currentIntroduce, currentStyle, isMD, isStyleEditable}) => {\r\n  return {\r\n    currentIntroduce,\r\n    currentStyle,\r\n    isMD,\r\n    isStyleEditable,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\t\tsetMarkdown: bindActionCreators(setMarkdown, dispatch),\r\n\t\tsetStyle: bindActionCreators(setStyle, dispatch),\r\n    setIntroduce: bindActionCreators(setIntroduce, dispatch),\r\n    setStyleEditable: bindActionCreators(setStyleEditable, dispatch),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Resume);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store/reduxDevTools';\nimport Resume from '../src/components/Resume'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Resume />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}